version: 2.1

jobs:
  build:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Generate version number and docker image tags
          command: |
            export VERSION="$CIRCLE_SHA1"
            echo "export VERSION="$CIRCLE_SHA1"" >> properties.env
            echo "export DOCKER_TAG=\"$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME:$VERSION\"" >> properties.env
            cat properties.env >> $BASH_ENV
      - restore_cache:
          key: familie-ef-soknad-api-{{ checksum "pom.xml" }}
      - run:
          name: Hent dependencies
          command: |
            mvn --settings .m2/maven-settings.xml dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: familie-ef-soknad-api-{{ checksum "pom.xml" }}
      - run:
          name: Bygger produksjon
          command: |
            mvn --settings .m2/maven-settings.xml clean package
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - .
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit


  deploy_docker:
    docker:
      - image: circleci/node:10
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Set up environment variables
          command: cat /home/circleci/project/properties.env >> $BASH_ENV
      - run:
          name: Bygger Docker image
          command: |
            echo $DOCKER_TAG $VERSION
            docker build -t $DOCKER_TAG .
      - run:
          name: Docker push
          command: |
            echo "$DOCKER_PASSWORD" | docker login --username "$DOCKER_LOGIN" --password-stdin
            echo "Pushing with tag $DOCKER_TAG"
            docker push $DOCKER_TAG
      - persist_to_workspace:
          root: /home/circleci/project
          paths:
            - properties.env

  github_app:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - run:
          name: Creating Github Apps Installation Token
          command: |
            git clone https://github.com/navikt/github-apps-support.git
            export PATH=`pwd`/github-apps-support/bin:$PATH
            echo $GITHUB_PRIVATE_KEY | base64 --decode > ./github.key.pem
            GITHUB_TOKEN=$(generate-installation-token.sh `generate-jwt.sh ./github.key.pem $GITHUB_APP_ID`)
      - persist_to_workspace:
          root: .
          paths:
            - ./github.key.pem

  deploy_dev:
    docker:
      - image: navikt/deployment:v1
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - checkout
      - run:
          name: Set up environment variables
          command: cat /home/circleci/project/properties.env >> $BASH_ENV
      - run:
          name: Create github deployment for stable test
          command: |
            source $BASH_ENV
            /app/deploy \
            --apikey="$NAIS_DEPLOY_APIKEY" \
            --cluster=dev-gcp \
            --owner=$CIRCLE_PROJECT_USERNAME \
            --repository=$CIRCLE_PROJECT_REPONAME \
            --var=version="${VERSION}" \
            --resource=./gcp-nais-dev.yaml
  deploy_prod:
    docker:
      - image: navikt/deployment:v1
    steps:
      - attach_workspace:
          at: /home/circleci/project
      - checkout
      - run:
          name: Set up environment variables
          command: cat /home/circleci/project/properties.env >> $BASH_ENV
      - run:
          name: Create github deployment for stable test
          command: |
            source $BASH_ENV
            /app/deploy \
            --apikey="$NAIS_DEPLOY_APIKEY" \
            --cluster=prod-gcp \
            --owner=$CIRCLE_PROJECT_USERNAME \
            --repository=$CIRCLE_PROJECT_REPONAME \
            --var=version="$VERSION" \
            --resource=./gcp-nais-prod.yaml

workflows:
  version: 2
  build_n_deploy:
    jobs:
    - build:
        filters:
          tags:
            only: /^v[0-9]+\.[0-9]+$/
    - deploy_docker:
        context: NAIS deployment
        requires:
        - build
        filters:
          tags:
            only: /^v[0-9]+\.[0-9]+$/
    - github_app:
        context: familie-ci
        filters:
          tags:
            only: /^v[0-9]+\.[0-9]+$/
    - deploy_dev:
        context: familie-ci
        requires:
        - deploy_docker
        - github_app
        filters:
          tags:
            only: /^.*/
          branches:
            only: /.*/
    - deploy_prod:
        context: familie-ci
        requires:
        - deploy_docker
        - github_app
        filters:
          tags:
            only: /^.*/
          branches:
            only: master
